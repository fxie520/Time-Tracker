name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # Label of the job
  build:

    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.10"]

    runs-on: ubuntu-22.04

    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start        
        mysql -e 'CREATE DATABASE time_tracker_db CHARACTER SET utf8;' -uroot -proot
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r time_tracker/requirements.txt
    - name: Linting
      continue-on-error: true
      run: |
        flake8
    - name: Run Tests
      env:
        ALLOWED_HOSTS: "*"
        SECRET_KEY: ${{ secrets.SECRET_KEY }}   # Use GitHub secret here
        REDIS_LOCATION: redis://redis:6379
        MYSQL_ROOT_PASSWORD: "root"
        MYSQL_HOST: "localhost"
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        DOCKER: "True"
      run: |
        cd time_tracker
        python manage.py test
