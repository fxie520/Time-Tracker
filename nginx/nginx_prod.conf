# TODO:
# Enable server push for about page
# Enable GeoIP and customize access log format

error_log /var/log/nginx/error.log;

# auto means worker_processes = number of CPU cores
worker_processes auto;

events {
  worker_connections 1024;
}

http {
    include mime.types;
    access_log /var/log/nginx/access.log combined;

    # Disable server version display for security
    server_tokens off;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets
    tcp_nopush on;

    # Response compression with gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 3;
    gzip_buffers 16 8k;
    # Minimum HTTP version of a request required to compress a response
    gzip_http_version 1.1;
    # Not to compress files smaller than 256 bytes
    gzip_min_length 256;
    gzip_types text/css application/json application/javascript application/pdf;

    # Define rate limit zones (1 Mb to store ~16,000 addresses)
    limit_req_zone $binary_remote_addr zone=web_page:1m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:1m rate=10r/s;

    # Upstream servers
    upstream upstream_servers {
        server django:8000 fail_timeout=1s;
    }

    # Redirect HTTP traffic to HTTPS
    server {
        listen 80;
        server_name timetracker.club www.timetracker.club;

        # Certbot challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name timetracker.club www.timetracker.club;
        charset utf-8;
        root /;

        # Avoid click-jacking attacks
        add_header X-Frame-Options SAMEORIGIN always;

        # Inform browsers that the site should only be accessed using HTTPS, so any future access should use HTTPS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # SSL
        ssl_certificate /etc/letsencrypt/live/www.timetracker.club/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.timetracker.club/privkey.pem;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Serve static files (prefix match)
        location /static {
            root /;
            try_files $uri/ $uri @friendly_404;

            # Rate limiting (higher limit so that the icons in the about page load faster)
            limit_req zone=static burst=20 nodelay;

            # Indicates that content may be cached by anyone, including browsers and CDNs
            add_header Cache-Control public;
            add_header Vary Accept-Encoding;
            expires 1w;
        }

        # Proxy pass to Gunicorn
        location / {
            # Rate limiting
            limit_req zone=web_page burst=10;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://upstream_servers;
        }

        # Named location
        location @friendly_404 {
            return 404 "404 - Sorry, that file could not be found.";
        }
    }
}
